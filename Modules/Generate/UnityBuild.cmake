include_guard(GLOBAL)

#[[
This behavior is changing to reimplement the CMake 3.16 behavior as much as
possible. Properties we need to care about:
UNITY_BUILD
UNITY_BUILD_CODE_BEFORE_INCLUDE
UNITY_BUILD_CODE_AFTER_INCLUDE

We need to ignore UNITY_BUILD_BATCH_SIZE, unfortunately
We also want to use the UNITY_SOURCES property instead of the "default" one.

Technically, this is so things like Coven can manage the correct behavior.
]]
function (ixm_generate_unity_source target)
  parse(${ARGN} @ARGS=? LANGUAGE)
  assign(LANGUAGE ? LANGUAGE : CXX)

  string(CONCAT unity-build $<IF:
    $<BOOL:$<TARGET_PROPERTY:${target},UNITY_BUILD>>,
    $<TARGET_PROPERTY:${target},UNITY_BUILD>,
    ${CMAKE_UNITY_BUILD}
  >)

  string(CONCAT unity-file $<IF:
    $<BOOL:$<TARGET_PROPERTY:${target},UNITY_BUILD_OUTPUT_FILE>>,
    $<TARGET_PROPERTY:${target},UNITY_BUILD_OUTPUT_FILE>,
    $<TARGET_PROPERTY:${target},BINARY_DIR>/${target}.unity.$<LOWER_CASE:${LANGUAGE}>
  >)

  string(CONCAT unity-before $<TARGET_PROPERTY:${target},UNITY_BUILD_CODE_BEFORE_INCLUDE>)
  string(CONCAT unity-after $<TARGET_PROPERTY:${target},UNITY_BUILD_CODE_AFTER_INCLUDE>)
  string(CONCAT unity-sources $<TARGET_PROPERTY:${target},UNITY_SOURCES>)

  string(CONCAT before-include $<$<BOOL:${unity-before>:${unity-before}>)
  string(CONCAT after-include $<$<BOOL:${unity-after}>:${unity-after}>)

  string(CONCAT content $<
    $<BOOL:${unity-sources}>:
    "${before-include}\n#include <"
    $<JOIN:
      ${unity-sources},
      "$<ANGLE-R>\n${after-include}\n${before-include}#include <"
    >
    ">${after-include}"
  >)

  file(GENERATE
    OUTPUT ${unity-file}
    CONTENT "/* GENERATED BY IXM. DO NOT EDIT */\n${content}"
    CONDITION ${unity-build})
endfunction()
