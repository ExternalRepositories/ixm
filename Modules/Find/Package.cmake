include_guard(GLOBAL)

include(FindPackageHandleStandardArgs)

variable_watch(CMAKE_FIND_PACKAGE_NAME ixm::find::package)

# Event handler for entering (and exiting) find_package call
function (ixm::find::package variable access value current stack)
  if (access STREQUAL MODIFIED_ACCESS)
    ixm_find_package_constructor(${value})
  elseif (access STREQUAL REMOVED_ACCESS)
    ixm_find_package_destructor()
  endif()
endfunction()

function (ixm_find_package_constructor name)
  if (NOT COMMAND ixm::find::package::${name})
    ixm_find_package_handler(${name})
    ixm_find_package_watch(${name})
  endif()
  set_property(GLOBAL PROPERTY ixm::find::package ${name})
  dict(INSERT ixm::find NAME ${name})
  dict(INSERT ixm::find REQUIRED FALSE)
  dict(INSERT ixm::find QUIETLY FALSE)
  dict(INSERT ixm::find VERSION::MAJOR 0)
  dict(INSERT ixm::find VERSION::MINOR 0)
  dict(INSERT ixm::find VERSION::PATCH 0)
  dict(INSERT ixm::find VERSION::TWEAK 0)
  dict(INSERT ixm::find VERSION::COUNT 0)
  dict(INSERT ixm::find VERSION::EXACT 0)
endfunction()

function (ixm_find_package_destructor)
  get_property(name GLOBAL PROPERTY ixm::find::package)
  set_property(GLOBAL PROPERTY ixm::find::package)
  if (TARGET ixm::find::${name})
    ixm_find_package_check(${name})
  endif()
  dict(KEYS ixm::find keys)
  dict(REMOVE ixm::find ${keys})
endfunction()

function (ixm_find_package_handler name)
  function (ixm::find::${name} variable access value current stack)
    if (NOT access STREQUAL MODIFIED_ACCESS)
      return()
    endif()
    get_property(package GLOBAL PROPERTY ixm::find::package)
    foreach (var IN ITEMS REQUIRED QUIETLY COMPONENTS VERSION)
      if (variable STREQUAL "${package}_FIND_${var}" AND value)
        dict(INSERT ixm::find ${var} ${value})
      endif()
    endforeach()
    if (variable MATCHES "${package}_FIND_VERSION_(.+)" AND value)
      dict(INSERT ixm::find VERSION::${CMAKE_MATCH_1} ${value})
    endif()
    if (variable STREQUAL "${package}_FIND_COMPONENTS")
      foreach (component IN LISTS ${package}_FIND_COMPONENTS)
        if (NOT DEFINED ${package}_FIND_REQUIRED_${component})
          set(required 0)
        else()
          set(required ${${package}_FIND_REQUIRED_${component}})
        endif()
        dict(INSERT ixm::find ${component}::REQUIRED ${required})
      endforeach()
    endif()
  endfunction()
endfunction()

function (ixm_find_package_watch name)
  foreach (var IN ITEMS REQUIRED QUIETLY VERSION COMPONENTS)
    variable_watch(${name}_FIND_${var} ixm::find::${name})
  endforeach()
  foreach (var IN ITEMS MAJOR MINOR PATCH TWEAK COUNT EXACT)
    variable_watch(${name}_FIND_VERSION_${var} ixm::find::${name})
  endforeach()
endfunction ()

function (ixm_find_package_check name)
  if (NOT TARGET ${name}::${name})
    add_library(${name}::${name} INTERFACE IMPORTED GLOBAL)
  endif()
endfunction()

# Checks to make sure all PROGRAM calls succeeded
function (ixm_find_package_check_program)
endfunction()

# Checks to make sure all LIBRARY calls succeeded
function (ixm_find_package_check_library)
endfunction()

# Checks to make sure all FRAMEWORK calls succeeded
function (ixm_find_package_check_framework)
endfunction()
