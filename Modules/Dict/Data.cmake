include_guard(GLOBAL)

function (ixm_dict_load dict)
  void(FROM data matched)
  parse(${ARGN} @ARGS=1 FROM)
  if (NOT FROM)
    log(FATAL "dict(LOAD) missing 'FROM' parameter")
  endif()
  ixm_dict_filepath(FROM "${FROM}" "ixm")
  if (NOT EXISTS "${FROM}")
    return()
  endif()
  ixm_dict_create(${dict})
  file(READ "${FROM}" data)
  string(ASCII 1 SOH)
  string(ASCII 25 EM)
  string(ASCII 2 STX)
  string(ASCII 3 ETX)
  set(header "${SOH}${STX}IXM${ETX}${STX}([^${ETX}]+)${EM}")
  string(REGEX MATCH "^${header}\n(.*)$" matched "${data}")
  if (NOT matched)
    log(FATAL "Could not read IXM file format from '${FROM}'")
  endif()
  if (NOT CMAKE_MATCH_1 STREQUAL "v1")
    log(FATAL "IXM File Format '${CMAKE_MATCH_1}' is not supported")
  endif()
  set(data "${CMAKE_MATCH_2}")
  string(ASCII 29 GS)
  string(ASCII 30 RS)
  string(ASCII 31 US)
  string(REPLACE "${GS}" ";" data "${data}")
  foreach (entry IN LISTS data)
    string(REPLACE "${RS}" ";" entry "${entry}")
    list(GET entry 0 key)
    list(GET entry 1 val)
    string(REPLACE "${US}" ";" val "${val}")
    ixm_dict_assign(${dict} ${key} ${val})
  endforeach()
endfunction()

function (ixm_dict_save dict)
  void(INTO keys value output)
  parse(${ARGN} @ARGS=1 INTO)
  if (NOT INTO)
    log(FATAL "dict(SAVE) missing 'INTO' parameter")
  endif()
  ixm_dict_noop(${dict})
  ixm_dict_keys(${dict} keys)
  string(ASCII 29 GS)
  string(ASCII 30 RS)
  string(ASCII 31 US)
  foreach (key IN LISTS keys)
    ixm_dict_get(${dict} ${key} value)
    if (value)
      string(REPLACE ";" "${US}" value "${value}")
      list(APPEND output "${key}${RS}${value}")
    endif()
  endforeach()
  list(JOIN output "${GS}" output)
  ixm_dict_filepath(INTO "${INTO}" "ixm")
  string(ASCII 1 SOH)
  string(ASCII 25 EM)

  string(ASCII 2 STX)
  string(ASCII 3 ETX)
  file(WRITE "${INTO}" "${SOH}${STX}IXM${ETX}${STX}v1${ETX}${EM}\n${output}")
endfunction()

function (ixm_dict_json @dict)
  parse(${ARGN}  @ARGS=1 INTO)
  if (NOT INTO)
    log(FATAL "dict(JSON) missing 'INTO' parameter")
  endif()
  ixm_dict_noop(${\@dict})
  dict(KEYS ${\@dict} @keys)
  foreach (@key IN LISTS @keys)
    ixm_dict_get(${\@dict} ${\@key} @value)
    list(LENGTH @dvalue @length)
    if (NOT DEFINED @value)
      set(@json:text "null")
    elseif (@length GREATER 1)
      ixm_dict_json_array(@json:text ${\@value})
    else()
      ixm_dict_json_value(@json:text ${\@value})
    endif()
    list(APPEND @json:elements "\"${\@key}\":${\@json\:text}")
  endforeach()
  list(JOIN @json:elements "," @json:object)
  ixm_dict_filepath(@filepath "${INTO}" "json")
  file(WRITE "${\@filepath}" "{${\@json\:object}}")
endfunction()

function (ixm_dict_json_value @result @value)
  set(@false OFF NO FALSE N IGNORE NOTFOUND)
  set(@true ON TRUE YES Y)
  if (@value IN_LIST @true)
    set(${\@result} "true" PARENT_SCOPE)
  elseif (@value IN_LIST @false OR @value MATCHES ".*-NOTFOUND$")
    set(${\@result} "false" PARENT_SCOPE)
  elseif (@value MATCHES "(^-?[0-9]+$|^-?(0|[1-9][0-9]+)([.][0-9]+)?$)")
    set(${\@result} ${\@value} PARENT_SCOPE)
  else()
    set(${\@result} "\"${\@value}\"" PARENT_SCOPE)
  endif()
endfunction()

function (ixm_dict_json_array @result)
  foreach (@value IN LISTS ARGN)
    ixm_dict_json_value(@json:text ${\@value})
    list(APPEND @json:array "${\@json\:text}")
  endforeach()
  list(JOIN @json:array "," @json:text)
  set(${\@result} "[${\@json\:text}]" PARENT_SCOPE)
endfunction()
