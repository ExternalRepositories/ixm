include_guard(GLOBAL)

function (ixm_dict_load)
endfunction()

function (ixm_dict_save @dict:name)
  parse(${ARGN} @ARGS=1 INTO)
  if (NOT INTO)
    log(FATAL "dict(SAVE) missing 'INTO' parameter")
  endif()
  ixm_dict_noop(${\@dict\:name})
endfunction()

function (ixm_dict_json @dict:name)
  parse(${ARGN}  @ARGS=1 INTO)
  if (NOT INTO)
    log(FATAL "dict(JSON) missing 'INTO' parameter")
  endif()
  ixm_dict_noop(${\@dict\:name})
  dict(KEYS ${\@dict\:name} @dict:keys)
  foreach (@dict:key IN LISTS @dict:keys)
    dict(GET ${\@dict\:name} ${\@dict\:key} @dict:value)
    list(LENGTH @dict:value @value:length)
    if (NOT defined @dict:value)
      set(@json:text "null")
    elseif (@value:length GREATER 1)
      ixm_dict_json_array(@json:text ${\@dict\:value})
    else()
      ixm_dict_json_value(@json:text ${\@dict\:value})
    endif()
    list(APPEND @json:elements "\"${\@dict\:key}\":${\@json\:text}")
  endforeach()
  list(JOIN @json:elements "," @json:object)
  ixm_dict_filepath(@dict:filepath "${INTO}" "json")
  file(WRITE "${\@dict\:filepath}" "{${\@json\:object}}")
endfunction()

#[[ Utility Functions for the above interfaces ]]

function (ixm_dict_data)
  string(ASCII 29 @data:group)
  string(ASCII 30 @data:record)
  string(ASCII 31 @data:unit)
endfunction()

function (ixm_dict_data_header @data:header)
  string(ASCII 1 SOH)
  string(ASCII 25 EM)

  string(ASCII 2 STX)
  string(ASCII 3 ETX)
  set(${\@data\:header} "${SOH}${STX}IXM${ETX}${STX}v1${ETX}${EM}\n" PARENT_SCOPE)
endfunction()

function (ixm_dict_json_value @json:result @json:value)
  set(@json:false OFF NO FALSE N IGNORE NOTFOUND)
  set(@json:true ON TRUE YES Y)
  if (@json:value IN_LIST @json:true)
    set(${\@json\:result} "true" PARENT_SCOPE)
  elseif (@json:value IN_LIST @json:false OR @json:value MATCHES ".*-NOTFOUND$")
    set(${\@json\:result} "false" PARENT_SCOPE)
  elseif (@json:value MATCHES "(^-?[0-9]+$|^-?(0|[1-9][0-9]+)([.][0-9]+)?$)")
    set(${\@json\:result} ${\@json\:value} PARENT_SCOPE)
  else()
    set(${\@json\:result} "\"${\@json\:value}\"" PARENT_SCOPE)
  endif()
endfunction()

function (ixm_dict_json_array @json:result)
  foreach (@json:value IN LISTS ARGN)
    ixm_dict_json_value(@json:text ${\@json\:value})
    list(APPEND @json:array "${\@json\:text}")
  endforeach()
  list(JOIN @json:array "," @json:text)
  set(${\@json\:result} "[${\@json\:text}]" PARENT_SCOPE)
endfunction()