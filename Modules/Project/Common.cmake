include_guard(GLOBAL)

function (ixm_project_common_version name)
  if (DEFINED PROJECT_VERSION)
    return()
  endif()
  set(VERSION 0.1.0)
  set(MAJOR 0)
  set(MINOR 1)
  set(PATCH 0)
  set(TWEAK)
  set(${name}_VERSION ${VERSION} PARENT_SCOPE)
  set(PROJECT_VERSION ${VERSION} PARENT_SCOPE)
  foreach (var IN ITEMS MAJOR MINOR PATCH TWEAK)
    set(${name}_VERSION_${var} ${${var}} PARENT_SCOPE)
    set(PROJECT_VERSION_${var} ${${var}} PARENT_SCOPE)
  endforeach()
endfunction()

function (ixm_project_common_standalone name)
  set(standalone OFF)
  if (CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
    set(standalone ON)
  endif()
  set_property(GLOBAL PROPERTY ${name}::standalone ${standalone})
  set(PROJECT_STANDALONE ${standalone} PARENT_SCOPE)
  set(${name}_STANDALONE ${PROJECT_STANDALONE} CACHE BOOL
    "Whether ${name} is the top level CMake project")
endfunction()

function (ixm_project_common_language name)
  parse(${ARGN}
    @ARGS=* LANGUAGES
    @ARGS=? VERSION DESCRIPTION HOMEPAGE_URL
    )
  foreach (language IN LISTS LANGUAGES)
    string(REGEX MATCH "^([A-Z]*)([0-9]*)$" matched ${language})
    if (DEFINED CMAKE_MATCH_2)
      set(CMAKE_${CMAKE_MATCH_1}_STANDARD ${CMAKE_MATCH_2})
    endif()
    list(APPEND languages ${CMAKE_MATCH_1})
  endforeach()
  if (languages)
    list(INSERT languages 0 LANGUAGES)
  endif()
  if (VERSION)
    list(APPEND REMAINDER VERSION ${VERSION})
  endif()
  if (DESCRIPTION)
    list(APPEND REMAINDER DESCRIPTION ${DESCRIPTION})
  endif()
  if (HOMEPAGE_URL)
    list(APPEND REMAINDER HOMEPAGE_URL ${HOMEPAGE_URL})
  endif()
  set(REMAINDER ${REMAINDER} ${languages} PARENT_SCOPE)
endfunction()
